###############################################################################
# config file for data acquisition server for S7-400 PLC
###############################################################################
# 
# "#" at 1st column of line will be a comment, use it to disable settings. Note
# that always on valid setting must be available
#
# Use ";" for inline comments
#
# If you want to have some text in more than one line, following lines must
# be indented with TAB, see remarks in aqdata settings
#


###############################################################################
# aqdata settings
###############################################################################
[aqdata]
place = Steti
creator = Michael Taxis
machine = arcus EVO
order = 
remarks = ; use tab for multiline values
    arcus EVO
    investigating malfunction / referencing of pivoting drum
    
    
###############################################################################
# communication settings
# setting up communication parameters to S7-PLC
###############################################################################
[communication]

# demo switch
# if 1 communication will be ignored and values will be randomly created
demo = 0

# ip address
# ip = 192.168.1.107 ; Test PC with PLCSIM and nettoplcsim
# ip = 172.16.13.174 ; PÃ¶ls AS44
# ip = 10.34.182.95 ; Steti arcus Evo Antriebe
# ip = 10.34.182.119 ; Steti arcus Evo
# ip = 172.16.1.40 ; Suzano Antriebe
# ip = 192.168.1.213 ; Test w. PLCSIM and NetToPlcsim
ip = 192.168.25.51 ; Munksjoe Lalinde

# rack number, see HW Config
rack = 0 ; 

# slot number of CPU, see HW Config
# slot = 4 ; Suzano Antriebe
# slot = 3 ; Steti arcus EVO machine PLC
# slot = 3 ; Steti arcus EVO drive PLC
# slot = 2 ; plcsim taxsvr
slot = 3 ; Munksjoe Lalinde

# maximum attempts for connection, 0 is trying forever
maxattempts = 10

###############################################################################
# miscellaneous settings
###############################################################################
[misc]
# miscellaneous values for setting up the acquisition server

# value delimiter in storage file
delimiter = ;

# prefix of data file name, e.g. a customer/project name or whatever
datafileprefix = munksjoe

# data file name for actual data recording, without extension!
# e.g. if you use "filename", actual name will be "filename.csv"
datafile = munksjoe

# autostart: when program is started decide whether acquisition is started(1)
#             immediately or wait for start signal (0)
autostart = 1

#path for data files, use "\" for directory separation, with "\" at the end !
# e.g. datapath = D:\mydata\2015\08\03\
datapath = C:\Daten\Aqserver\Archiv\

# if 1 use directory structure datapath\yyyyy\MM\dd otherwise use only datapath
usedir = 1

# scantime in milliseconds [ms]
scantime = 0

# maximum number of records
maxrecords = 100000

# switch for offset of boolean values
# if 1 then boolean values in a byte (see values settings) will be offset by 2 as follows:
#
# value + bit number * 2
#
#  bit | true | false
#  ----+------+-------
#   0  |  1   +  0
#  ----+------+-------
#   1  |  3   +  2
#  ----+------+-------
#   2  |  5   +  4
#  ----+------+-------
#   3  |  7   +  6
#  ----+------+-------
#   4  |  9   +  8
#  ----+------+-------
#   5  | 11   + 10
#  ----+------+-------
#   6  | 13   + 12
#  ----+------+-------
#   7  | 15   + 14
# if booloffset is 0 then only the boolean value (1 for true, 0 for false) will be stored
booloffset = 1

###############################################################################
# trigger settings
###############################################################################
#
# when trigger condition is matched, then we close the old file after post-trigger
# time and start the new file and copy pre-trigger and post-trigger time 
# recordings to new file
#
# condition is, with example:
#   trgsignal                trgcondition      trgvalue
#   rewind diameter [mm]     =                 0
#
[trigger]

# trigger signal, copy the name of the signal in [values]  section, 
# that you want to use as trigger signal.
# if you don't want to use a trigger, set 0 (remove comment in next line) 
trgsignal = 0
# comment out next line, if you enable trgsignal = 0
# trgsignal = test1

# trigger condition, use >,>=,==, <=,<,!= as condition
# if conditon is matched, then we close the old file and start a new one
# trgcondition = >
# trgcondition = >=
# trgcondition = ==
# trgcondition = <=
# trgcondition = <
trgcondition = !=

# trigger value, with this value we compare the trigger signal
trgvalue = 0

# pre-trigger time in seconds [s]
# will still add pre-trigger/scantime lines to old file after trigger event
# e.g. pre-trigger is 60 seconds and scantime is 100 ms, then 600 lines will be recorded
# after trigger event
pretrg = 30

#post-trigger time in seconds [s]
# will copy last post-trigger/scantime lines from old to new file
# e.g. post-trigger is 60 seconds and scantime is 100 ms, then 600 lines will be copied
# after trigger event
posttrg = 30


###############################################################################
# debug settings
###############################################################################
[debug]

# debug level
# set logging level to debug, write program actions
# to logfile
# 0 - no logging
# 1 - log INFO messages (default setting)
# 2 - log WARNING messages
# 3 - log DEBUG messages
# 4 - log ERROR messages
# 5 - log CRITICAL messages
# 6 - log EXCEPTION messages
dbglevel = 0

# name of logfile, without extension. Extension will be added as ".log"
logfile = aqserver

# add timestamp to logfile name 1 = yes, 0 = no
# if set to 1 a timestamp will be added to the lofile name. pls. note that a 
# new logfile will be created, every time you start the server, 
# when dbglevel is > 0
logts = 1

###############################################################################
# value settings, here we define the S7 variables we want to read,
# and their formats !
###############################################################################
[values]
# here we define the S7 variables that we want to observe
# use following syntax:
#
######### how to define the names: ############################################
# use config value name with [] - brackets to define the unit of the value
# 
# boolean values:
# For boolean values (see format X above) a complete byte is read and then split into 8 bits 
# To define names for the single bits use ',' to separate the names, e.g.:
#
#    bit0,bit1,bit2,bit3,bit4,bit5,bit6,bit7 = DB1234.DX5
#    Klemmventil UM1,Klemmventil UM2,Klemmventil UM3,Klemmventil UM4,Reserve,Reserve,Reserve,Reserve = DB1234.DX5
#
# If you do not want all the bits, leave the name empty e.g.:
#
#    bit0,,bit2,,,,, = DB1234.DX5
#
# This reads only bit0  and bit2
#
#
######### how to define the values: ############################################
# (S7 variable and format)
#    DBn.AFn.x
#                
#                where 
#                - DB is for data blocks or omitted if other area
#                - n is DB number or omitted if other area
#                - . only when data, omitted otherwise
#                - A is area
#                    - D for data 
#                    - M or F for flags
#                    - E or I for inputs
#                    - A or Q for outputs
#                    - T for timers
#                    - Z or C for counters
#                - F is format 
#                    - X - for BYTE in BOOL format, followed by byte address:
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                          will always be split in 8 single booleans
#                    - B - for BYTE in int format, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                    - W - for WORD, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                    - D - for DOUBLE WORD, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                    - F - for DOUBLE WORD in REAL format, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#
#

position St1L = DB54.DF2
position St1R = DB54.DF6
position St2L = DB54.DF66
position St2R = DB54.DF70
position St3L = DB54.DF10
position St3R = DB54.DF14
position St6L = DB54.DF74
position St6R = DB54.DF78
position St7L = DB54.DF18
position St7R = DB54.DF22
position St8L = DB54.DF82
position St8R = DB54.DF86
DIST1L = DB54.DF26
DIST1R = DB54.DF30
DIST2L = DB54.DF92
DIST2R = DB54.DF96
DIST3L = DB54.DF34
DIST3R = DB54.DF38
DIST6L = DB54.DF100
DIST6R = DB54.DF104
DIST7L = DB54.DF42
DIST7R = DB54.DF46
DIST8L = DB54.DF108
DIST8R = DB54.DF112
INPOS1L,INPOS1R,INPOS3L,INPOS3R,INPOS7L,INPOS7R,nop1,nop2 = DB54.DX0
INPOS2L,INPOS2R,INPOS6L,INPOS6R,INPOS8L,INPOS8R,nop3,nop4  = DB54.DX90
STTRQ1SP [Nm] = DB33.DF368
STTRQ2SP [Nm] = DB33.DF372
STTRQ3SP [Nm] = DB33.DF376
STTRQ6SP [Nm] = DB33.DF380
STTRQ7SP [Nm] = DB33.DF384
STTRQ8SP [Nm] = DB33.DF388
STTRQ1FB [Nm] = DB33.DF392
STTRQ2FB [Nm] = DB33.DF396
STTRQ3FB [Nm] = DB33.DF400
STTRQ6FB [Nm] = DB33.DF404
STTRQ7FB [Nm] = DB33.DF408
STTRQ8FB [Nm] = DB33.DF412

